openapi: 3.0.0
info:
  title: gat-tools-api
  version: 0.0.0
  description: Ferramenta de automação para processos da Gestão de Ambientes de Testes.
  contact:
    email: dwmaker@hotmail.com
    name: Paulo Ponciano
servers:
  - url: /api/v1
    description: Desenvolvimento local
paths:
  /datasources:
    get:
      tags:
        - Datasource
      summary: Browse Datasources
      x-swagger-router-controller: DatasourceController
      operationId: listDatasources
      parameters:
        - name: type
          in: query
          required: true
          schema:
            type: string
            enum:
              - app
              - asm
        - name: applicationCode
          in: query
          required: false
          schema:
            type: string
      security:
        - basicAuth:
            - searchdatasource
      responses:
        '200':
          description: A JSON array of datasource
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/datasource'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
    post:
      tags:
        - Datasource
      summary: Create a datasource
      x-swagger-router-controller: DatasourceController
      operationId: createDatasource
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/datasource'
      security:
        - basicAuth:
            - create.datasource
      responses:
        '200':
          description: A JSON Datasource Object
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/datasource'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  '/datasources/{datasourceCode}':
    parameters:
      - name: datasourceCode
        in: path
        required: true
        schema:
          type: string
    get:
      tags:
        - Datasource
      summary: Read a Datasource object
      x-swagger-router-controller: DatasourceController
      operationId: getDatasource
      security:
        - basicAuth:
            - read.datasource
      responses:
        '200':
          description: A JSON datasource Object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/datasource'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
    put:
      tags:
        - Datasource
      summary: Edit a Datasource object
      x-swagger-router-controller: DatasourceController
      operationId: updateDatasource
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/datasource'
      security:
        - basicAuth:
            - edit.datasource
      responses:
        '200':
          description: A JSON datasource Object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/datasource'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
    delete:
      tags:
        - Datasource
      summary: Delete a Datasource
      x-swagger-router-controller: DatasourceController
      operationId: deleteDatasource
      security:
        - basicAuth:
            - read.datasource
      responses:
        '200':
          description: A JSON datasource Object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/datasource'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  /applications:
    get:
      tags:
        - Application
      summary: Returns a list of applications
      x-swagger-router-controller: ApplicationController
      operationId: listApplications
      parameters: []
      responses:
        '200':
          description: A JSON array of application
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/application'
  '/netsms-version/{datasourceCode}':
    get:
      tags:
        - NETSMS
      summary: Returns a version Object
      x-swagger-router-controller: NetsmsVersionController
      operationId: listNetsmsVersion
      parameters:
        - name: datasourceCode
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A JSON array of application
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/netsms-version'
  '/netsms-parameter/{datasourceCode}':
    get:
      tags:
        - NETSMS
      summary: Returns a list of Netsms Parameter
      x-swagger-router-controller: NetsmsParameterController
      operationId: listNetsmsParameter
      parameters:
        - name: datasourceCode
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A JSON array of application
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/netsms-parameter'
  /cenarios:
    get:
      tags:
        - Application
      summary: Returns a list of cenarios
      x-swagger-router-controller: ApplicationController
      operationId: listCenarios
      parameters: []
      responses:
        '200':
          description: A JSON array of cenarios
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/cenario'
  /profile:
    get:
      tags:
        - Authentication
      summary: Returns current User
      x-swagger-router-controller: Authentication
      operationId: getProfile
      parameters: []
      security:
        - basicAuth: []
      responses:
        '200':
          description: A JSON User object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
  /environments:
    get:
      tags:
        - Application
      summary: Returns a list of environments
      x-swagger-router-controller: ApplicationController
      operationId: listEnvironments
      parameters: []
      responses:
        '200':
          description: A JSON array of environments
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/environment'
  '/accesscontrols/{datasourceCode}':
    parameters:
    - name: datasourceCode
      in: path
      required: true
      schema:
        type: string
    get:
      tags:
        - DBA
      summary: Return a list of Access Controls.
      x-swagger-router-controller: AccesscontrolController
      operationId: listAccesscontrols
      parameters:
        - name: type
          in: query
          required: false
          schema:
            type: string
            enum:
              - logon
              - monitora
      responses:
        '200':
          description: A JSON array of Access Control objects
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/accesscontrol'
  '/accesscontrols':
    get:
      tags:
        - DBA
      summary: Return a Access Control Metadata.
      x-swagger-router-controller: AccesscontrolController
      operationId: getMetadata
      responses:
        '200':
          description: A JSON array of Access Control objects
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/accesscontrol-metadata'
  '/asm-disks/{datasourceCode}':
    get:
      tags:
        - DBA
      summary: Returns a list of ASM disks.
      x-swagger-router-controller: AsmController
      operationId: listAsmdisks
      parameters:
        - name: datasourceCode
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A JSON array of ASM Disk objects
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/asmdisk'
components:
  responses:
    UnauthorizedError:
      description: Authentication information is missing or invalid
      headers:
        WWW_Authenticate:
          schema:
            type: string
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
  schemas:
    accesscontrol-metadata:
      type: object
      properties:
        refreshDate:
          type: string
          format: date-time
    user:
      type: object
      properties:
        username:
          type: string
        firstName:
          type: string
        lastName:
          type: string
    datasource:
      type: object
      properties:
        code:
          type: string
        type:
          type: string
          enum:
          - app
          - asm
        connectionstring:
          type: string
        username:
          type: string
        password:
          type: string
          writeOnly: true
      example:
        code: net001ht4sun002b
        type: asm
        connectionstring: (DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=5.17.8.25)(PORT=1523))(CONNECT_DATA=(SID=BRASAMX)))
        username: consulta_dicionario
        password: mypass
    application:
      type: object
      properties:
        code:
          type: string
        description:
          type: string
      example:
        description: NetSMS (legado)
        code: NETSMS
    cenario:
      type: object
      properties:
        code:
          type: string
        applicationCode:
          type: string
        description:
          type: string
          nullable: true
      example:
        description: Teste Integrado - lado direito
        applicationCode: NETSMS
        code: SIT1
    environment:
      type: object
      properties:
        code:
          type: string
        description:
          type: string
      example:
        description: Teste Integrado - lado direito
        code: SIT4
    asmdisk:
      type: object
      properties:
        name:
          type: string
        path:
          type: string
        diskgroupNumber:
          type: integer
        diskgroupName:
          type: string
        instanceName:
          type: string
        databaseName:
          type: string
        softwareVersion:
          type: string
        hostName:
          type: string
      example:
        name: BRA_GOLDEN_102017_0000
        path: /dev/rdsk/c0t60A9800041765A706D5D4673544F6257d0s6
        databaseName: BRASAMX
        diskgroupNumber: 11
        instanceName: +ASM
        softwareVersion: 11.2.0.4.0
        diskgroupName: BRA_BRASAMX_DATA102017
    accesscontrol:
      type: object
      properties:
        owner:
          type: string
        name:
          type: string
        valid:
          type: boolean
        enabled:
          type: boolean
        type:
          type: string
      example:
        owner: CORE
        name: TR_LOGON
        valid: true
        enabled: true
        type: logon
    netsms-version:
      type: object
      properties:
        version:
          type: string
        applyDate:
          type: string
          format: date-time
        executableId:
          type: integer
      example:
        version: 9.4.1
        applyDate: {}
        executableId: 400
    netsms-parameter:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        numValue:
          type: number
      example:
        name: 9.4.1
        description: {}
        numValue: 400
